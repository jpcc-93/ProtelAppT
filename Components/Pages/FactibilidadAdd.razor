
@page "/estudios-add"
@inherits ProtelAppT.Service.CrudComponentBase<Factibilidad>
@inject IGenericRepository Repo
@inject ISnackbar Snackbar
@using ProtelAppT.Data
@using ProtelAppT.Repositories

<MudPaper Class="pa-4 mx-auto mt-10" MaxWidth="700px" Elevation="6"
          Style="border: 1px solid #ccc; box-shadow: 0 2px 12px rgba(0,0,0,0.1);">
    <MudText Typo="Typo.h5" Class="mb-4">Registrar Nueva Petición de Factibilidad</MudText>

    <EditForm Model="Entity" OnValidSubmit="GuardarExtendido">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <MudGrid>
            <MudItem xs="12">
                <MudSelect T="int" Label="Cliente" @bind-Value="Entity.IdCliente" Required="true">
                    @foreach (var cliente in clientes)
                    {
                        <MudSelectItem Value="@cliente.IdCliente">@cliente.Nombre</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12">
                <MudTextField Label="Nombre del Proyecto" @bind-Value="Entity.NombreProyecto" Required="true" />
            </MudItem>

            <MudItem xs="12">
                <MudTextField Label="Descripción" @bind-Value="Entity.Descripcion" Lines="3" />
            </MudItem>

            <MudItem xs="12">
                <MudTextField Label="Ubicación" @bind-Value="Entity.Ubicacion" Required="true" />
            </MudItem>

            <MudItem xs="12">
                <MudSelect T="int" Label="Estado de Factibilidad" @bind-Value="Entity.IdEstadoFactibilidad" Required="true">
                    @foreach (var estado in estados)
                    {
                        <MudSelectItem Value="@estado.IdEstadoFactibilidad">@estado.Nombre</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Guardar</MudButton>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudPaper>

@code {
    private List<Cliente> clientes = new();
    private List<EstadoFactibilidad> estados = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        clientes = await Repo.GetAllAsync<Cliente>();
        estados = await Repo.GetAllAsync<EstadoFactibilidad>();
    }

    private async Task GuardarExtendido()
    {
        Entity.FechaSolicitud = DateTime.Now;
        await Save(); // De la clase base
        Snackbar.Add("Factibilidad registrada correctamente.", Severity.Success);
    }

}
